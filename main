package couponsystem.advice;

import org.springframework.http.HttpStatus;
import org.springframework.http.ProblemDetail;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import couponsystem.controller.CouponController;
import couponsystem.service.ex.CouponAlreadyExistsException;
import couponsystem.service.ex.InvalidDateException;
import couponsystem.service.ex.InvalidQuantityException;
import couponsystem.service.ex.NoSuchCouponException;

@RestControllerAdvice(assignableTypes = CouponController.class)
public class CouponAdvice {
    @ExceptionHandler(NoSuchCouponException.class)
    @ResponseStatus(HttpStatus.NOT_FOUND)
    public ProblemDetail handleNoSuchCoupon(NoSuchCouponException exception) {
        return ProblemDetail.forStatusAndDetail(HttpStatus.NOT_FOUND, exception.getMessage());
    }

    @ExceptionHandler(InvalidQuantityException.class)
    @ResponseStatus(HttpStatus.BAD_REQUEST)
    public ProblemDetail handleInvalidQuantity(InvalidQuantityException exception) {
        return ProblemDetail.forStatusAndDetail(HttpStatus.BAD_REQUEST, exception.getMessage());
    }

    @ExceptionHandler(InvalidDateException.class)
    @ResponseStatus(HttpStatus.BAD_REQUEST)
    public ProblemDetail handleInvalidDate(InvalidDateException exception) {
        return ProblemDetail.forStatusAndDetail(HttpStatus.BAD_REQUEST, exception.getMessage());
    }

    @ExceptionHandler(CouponAlreadyExistsException.class)
    @ResponseStatus(HttpStatus.CONFLICT)
    public ProblemDetail handleCouponAlreadyExists(CouponAlreadyExistsException exception) {
        return ProblemDetail.forStatusAndDetail(HttpStatus.CONFLICT, exception.getMessage());
    }
}

package couponsystem.controller;

public class CompanyController {
}

package couponsystem.controller;

import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestMapping;

import couponsystem.service.CouponService;
import lombok.RequiredArgsConstructor;

@Service
@RequestMapping("/api/coupon")
@RequiredArgsConstructor

public class CouponController {
    private final CouponService service;
}
package couponsystem.controller;

public class CustomerController {
}
package couponsystem.data.dto;

import lombok.Data;

@Data
public class CompanyDto {
    private long id;
    private String name;
    private String ticker;
    private String email;
    private String password;
}
package couponsystem.data.dto;

import java.time.LocalDate;

import lombok.Data;

@Data
public class CouponDto {
    private long id;
    private String name;
    private int quantity;
    private LocalDate expirationDate;
    private long companyId;
}
package couponsystem.data.dto;

import lombok.Data;

@Data
public class CustomerDto {
    private long id;
    private String firstName;
    private String lastName;
    private String email;
    private String password;
}
package couponsystem.data.entity;

import org.springframework.boot.autoconfigure.domain.EntityScan;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

@Entity
@EntityScan
public class Company {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;
    @Column(nullable = false)
    private String name;
    @Column(nullable = false, unique = true)
    private String ticker;
    @Column(nullable = false, unique = true)
    private String email;
    @Column(nullable = false)
    private String password;
}
package couponsystem.data.entity;

import org.springframework.boot.autoconfigure.domain.EntityScan;

import java.time.LocalDate;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Getter
@Setter
@EntityScan
public class Coupon {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;
    @Column(nullable = false)
    private String name;
    @Column(nullable = false, columnDefinition = "INT")
    private int quantity;
    @Column(nullable = false)
    private LocalDate expirationDate;
    @Column(nullable = false)
    private long companyId;
}
package couponsystem.data.entity;

import org.springframework.boot.autoconfigure.domain.EntityScan;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

@Entity
@EntityScan
public class Customer {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;
    @Column(nullable = false)
    private String firstName;
    @Column(nullable = false)
    private String lastName;
    @Column(nullable = false, unique = true)
    private String email;
    @Column(nullable = false)
    private String password;
}
package couponsystem.mapper;

import org.mapstruct.Mapper;

import couponsystem.data.dto.CompanyDto;
import couponsystem.data.entity.Company;

@Mapper(componentModel = "spring")
public interface CompanyMapper {
    Company toEntity(CompanyDto dto);

    CompanyDto toDto(Company entity);
}
package couponsystem.mapper;

import org.mapstruct.Mapper;

import couponsystem.data.dto.CouponDto;
import couponsystem.data.entity.Coupon;

@Mapper(componentModel = "spring")
public interface CouponMapper {
    Coupon toEntity(CouponDto dto);

    CouponDto toDto(Coupon entity);
}
package couponsystem.mapper;

import org.mapstruct.Mapper;

import couponsystem.data.dto.CustomerDto;
import couponsystem.data.entity.Customer;

@Mapper(componentModel = "spring")
public interface CustomerMapper {
    Customer toEntity(CustomerDto dto);

    CustomerDto toDto(Customer entity);
}
package couponsystem.repository;

import org.springframework.data.jpa.repository.JpaRepository;

import java.util.Optional;

import couponsystem.data.entity.Company;
import couponsystem.data.entity.Coupon;

public interface CompanyRepository extends JpaRepository<Company, Long> {

    Optional<Coupon> findCouponByCompanyId(long id);

    void insertNewCoupon(Company company, Coupon coupon);

    void deleteCoupon(Company company, Coupon coupon);

    void updateCouponQuantity(Company company, Coupon coupon, int newQuantity);
}
package couponsystem.repository;

import org.springframework.data.jpa.repository.JpaRepository;

import java.util.Optional;

import couponsystem.data.entity.Coupon;

public interface CouponRepository extends JpaRepository<Coupon, Long> {
    Optional<Coupon> findCouponByCompanyId(long companyId);
}
package couponsystem.repository;

import com.netflix.appinfo.ApplicationInfoManager;

import java.time.LocalDate;
import java.util.Optional;

import couponsystem.data.entity.Customer;

public interface CustomerRepository {

    Optional<Customer> findPurchasedCouponByCustomerId();

    Optional<Customer> findUnpurchasedCouponByCustomerId();

    Optional<Customer> purchaseCoupon();

    ApplicationInfoManager.InstanceStatusMapper findCouponByExpirationDate(LocalDate expirationDate);
}
package couponsystem.service.ex;

public class CouponAlreadyExistsException extends RuntimeException {
public CouponAlreadyExistsException(String message) {
        super(message);
}
}
package couponsystem.service.ex;

public class InvalidDateException extends Throwable {
    public InvalidDateException(String message) {
        super(message);
    }
}
package couponsystem.service.ex;

public class InvalidQuantityException extends Throwable {
public InvalidQuantityException(String message) {
        super(message);
}
}
package couponsystem.service.ex;

public class NoSuchCompanyException extends RuntimeException {
    public NoSuchCompanyException(String message) {
        super(message);
    }
}
package couponsystem.service.ex;

public class NoSuchCouponException extends RuntimeException {
public NoSuchCouponException(String message) {
        super(message);
}
}
package couponsystem.service.ex;

public class NoSuchCustomerException extends RuntimeException {
    public NoSuchCustomerException(String message) {
        super(message);
    }
}
package couponsystem.service;

import java.util.Optional;

import couponsystem.data.dto.CouponDto;
import couponsystem.service.ex.InvalidQuantityException;

public interface CompanyService {
    Optional<CouponDto> getCouponByCompanyId(long id);

    CouponDto insertNewCoupon(long companyId);

    void updateQuantity(int quantity, long id);

    void updateQuantity(int quantity,
                        long companyId,
                        long couponId) throws InvalidQuantityException;
}
package couponsystem.service;

import org.springframework.stereotype.Service;

import java.util.Optional;

import couponsystem.data.dto.CouponDto;
import couponsystem.data.entity.Coupon;
import couponsystem.mapper.CouponMapper;
import couponsystem.repository.CompanyRepository;
import couponsystem.repository.CouponRepository;
import couponsystem.service.ex.CouponAlreadyExistsException;
import couponsystem.service.ex.InvalidQuantityException;
import couponsystem.service.ex.NoSuchCompanyException;
import couponsystem.service.ex.NoSuchCouponException;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class CompanyServiceImpl implements couponsystem.service.CompanyService {

    private final CompanyRepository companyRepository;
    private final CouponRepository couponRepository;
    private final CouponMapper couponMapper;


    @Override
    public Optional<CouponDto> getCouponByCompanyId(long id) {
        return Optional.ofNullable(companyRepository.findCouponByCompanyId(id)
                                           .map(couponMapper::toDto)
                                           .orElseThrow(() -> new NoSuchCompanyException(String.format(
                                                   "Error 400 - no match found for %s",
                                                   id))));
    }

    @Override
    public CouponDto insertNewCoupon(long companyId) {
        Optional<Coupon> optCouponName = couponRepository.findCouponByCompanyId(companyId);
        if (optCouponName.isPresent()) {
            throw new CouponAlreadyExistsException("Error 400 - coupon already exists");
        }
        Coupon newCoupon = new Coupon();
        newCoupon.setCompanyId(companyId);

        Coupon savedCoupon = couponRepository.save(newCoupon);

        return couponMapper.toDto(savedCoupon);
    }

    @Override
    public void updateQuantity(int quantity, long id) {

    }

    @Override
    public void updateQuantity(int quantity,
                               long companyId,
                               long couponId) throws InvalidQuantityException {
        Optional<Coupon> optionalCoupon = couponRepository.findById(couponId);

        if (optionalCoupon.isPresent()) {
            Coupon coupon = optionalCoupon.get();


            if (coupon.getCompanyId() == companyId) {
                coupon.setQuantity(quantity);

                couponRepository.save(coupon);
            } else {
                throw new InvalidQuantityException("Error 400 - invalid quantity");
            }
        } else {
            throw new NoSuchCouponException("Error 400 - no match found for couponId: " + couponId);
        }
    }
}package couponsystem.service;

public interface CouponService {
}
package couponsystem.service;

import org.springframework.stereotype.Service;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class CouponServiceImpl implements couponsystem.service.CouponService {
}
package couponsystem.service;

import java.time.LocalDate;
import java.util.Optional;

import couponsystem.data.dto.CouponDto;

public interface CustomerService {
    Optional<CouponDto> getCouponByCustomerId(long id);

    Optional<CouponDto> getCouponByExpirationDate(LocalDate expirationDate);
}
package couponsystem.service;

import org.springframework.stereotype.Service;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import couponsystem.data.dto.CouponDto;
import couponsystem.data.dto.CustomerDto;
import couponsystem.data.entity.Coupon;
import couponsystem.mapper.CouponMapper;
import couponsystem.repository.CouponRepository;
import couponsystem.repository.CustomerRepository;
import couponsystem.service.ex.NoSuchCustomerException;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class CustomerServiceImpl implements couponsystem.service.CustomerService {

    private final CouponRepository couponRepository;
    private final CouponMapper couponMapper;
    private final CustomerRepository customerRepository;

    public List<CouponDto> getCouponsExpiringInDays(long customerId, int days) {
        LocalDate expirationDateThreshold = LocalDate.now().plusDays(days);

        List<Coupon> customerCoupons = customerRepository.findPurchasedCouponByCustomerId(customerId);

        return customerCoupons.stream()
                .filter(coupon -> coupon.getExpirationDate().isBefore(expirationDateThreshold))
                .map(couponMapper::toDto)
                .collect(Collectors.toList());
    }

    @Override
    public Optional<CustomerDto> getCouponByCustomerId(long id) {
        return Optional.ofNullable(repository.findCouponByCustomerId(id)
                                           .map(mapper::toDto)
                                           .orElseThrow(() -> new NoSuchCustomerException(String.format(
                                                   "Error 400 - no match found for %s",
                                                   id))));
    }

    @Override
    public Optional<CouponDto> getCouponByExpirationDate(LocalDate expirationDate) {
        return Optional.empty();
    }
}
package couponsystem.service;

public class LoginService {
}
package couponsystem;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class CouponSystemApplication {

public static void main(String[] args) {
        SpringApplication.run(CouponSystemApplication.class, args);
}

}
server.port=8080
spring.application.name=coupon-portal


spring.datasource.url=jdbc:mysql://localhost:3306/coupon_portal?createDatabaseIfNotExist=true
spring.datasource.username=Raz
spring.datasource.password=2910

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
package com.example.couponsystem;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class CouponSystemApplicationTests {

@Test
void contextLoads() {
}

}
